name: Android CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    
permissions:
  contents: read
  checks: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build

  unit-tests:
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v4

    - name: Gradle cache
      uses: gradle/actions/setup-gradle@v4

    - name: Unit tests
      run: ./gradlew testDebug
      
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test_results
        path: '**/build/test-results/**/TEST-*.xml'
    
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: success() || failure() # always run even if the previous step fails
      with:
        include_passed: true
        detailed_summary: true
        report_paths: '**/build/test-results/**/TEST-*.xml'
  
  instrumentation-tests:
    runs-on: ubuntu-latest
    name: Test on API ${{ matrix.api-level }} ${{ matrix.arch }}
    strategy:
      fail-fast: false
      matrix:
        include:
            - api-level: 34
              target: default
              arch: x86_64
            - api-level: 35
              target: default
              arch: x86_64
    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
        
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1
      with:
          key: ${{ runner.os }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}
          save: false

    - name: Enable KVM
      run: |
        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
        sudo udevadm control --reload-rules
        sudo udevadm trigger --name-match=kvm

    - name: Gradle cache
      uses: gradle/actions/setup-gradle@v4

    - name: run tests
      if: steps.avd-cache.outputs.cache-hit != 'true'
      uses: reactivecircus/android-emulator-runner@b683a061eaff4aac4d0b585bfd0cf714a40aee93
      with:
        api-level: ${{ matrix.api-level }}
        arch: ${{ matrix.arch }}
        target: ${{ matrix.target }}
        script: |
           rm -rf $ANDROID_HOME/cmake
           ccache -o cache_dir=${{ github.workspace }}/.ccache
           ccache -o hash_dir=false
           ccache -o compiler_check='%compiler% -dumpmachine; %compiler% -dumpversion'
           ./gradlew connectedAndroidTest
        emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back emulated
        disable-animations: true
        avd-name: ${{ matrix.api-level }}_${{ matrix.arch }}

    - name: Upload Instrumentation Test report
      uses: actions/upload-artifact@v4
      with:
        name: test-outputs-${{ matrix.arch }}-${{ matrix.target }}-${{ matrix.api-level }}
        path: '**/build/reports/androidTests/connected'
